{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "riyalsyn"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"riyalsyn-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'riyalsyn-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:riyalsyn.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"riyalsyn-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://riyalgen2.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/riyalsyn-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('riyalsyn-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/riyalsyn-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('riyalsyn-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT trackCSV3 \nWITH (FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS(\n          FIELD_TERMINATOR = ',',\n          STRING_DELIMITER = '\"',\n          FIRST_ROW = 2,\n          USE_TYPE_DEFAULT = True)\n);\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'trackData3' )\n  CREATE EXTERNAL DATA SOURCE trackData3 \n  WITH (\n    LOCATION = 'abfs://bronze@riyalstorage.dfs.core.windows.net' \n  );\n\n  CREATE EXTERNAL TABLE trackTbl3(\n   track_name VARCHAR(255),\n    artist_name VARCHAR(255),\n    artist_count INT,\n    released_year INT,\n    released_month INT,\n    released_day INT,\n    in_spotify_playlists INT,\n    in_spotify_charts INT,\n    streams VARCHAR(255), --ERROR SHOULD BE INT\n    in_apple_playlists INT,\n    in_apple_charts INT,\n    in_deezer_playlists  VARCHAR(255), --ERROR SHOULD BE INT\n    in_deezer_charts VARCHAR(255), --ERROR SHOULD BE INT\n    in_shazam_charts VARCHAR(255), --ERROR SHOULD BE INT\n    bpm INT,\n    \"key\" VARCHAR(10),\n    mode VARCHAR(255),\n    danceability_percent FLOAT,\n    valence_percent FLOAT,\n    energy_percent FLOAT,\n    acousticness_percent FLOAT,\n    instrumentalness_percent FLOAT,\n    liveness_percent FLOAT,\n    speechiness_percent FLOAT,\n    cover_url VARCHAR(255)\n)\nWITH (\n  LOCATION = '*.csv',\n  DATA_SOURCE = trackData3,\n  FILE_FORMAT = trackCSV3\n);\nSELECT * from trackTbl3\n\ndrop EXTERNAL TABLE trackTbl3",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dbdatabase",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tblfromcutomer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT skipHeader_CSV \nWITH (FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS(\n          FIELD_TERMINATOR = ',',\n          STRING_DELIMITER = '\"',\n          FIRST_ROW = 2,\n          USE_TYPE_DEFAULT = True)\n);\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'customer_data2' )\n  CREATE EXTERNAL DATA SOURCE customer_data2 \n  WITH (\n    LOCATION = 'abfss://project2@riyalgen2.dfs.core.windows.net' \n  );\nCREATE EXTERNAL TABLE customer(\n   OrderID INT ,\n    ProductID INT,\n    ProductName VARCHAR(255),\n    Category VARCHAR(100),\n    Quantity INT,\n    Price DECIMAL(10, 2),\n    Discount DECIMAL(5, 2),\n    TotalAmount DECIMAL(10, 2),\n    OrderDate DATE,\n    CustomerID INT,\n    CustomerName VARCHAR(255),\n    ShippingAddress VARCHAR(255),\n    PaymentMethod VARCHAR(50),\n    Status VARCHAR(50)\n)\nWITH (\n  LOCATION = 'Spoti*',\n  DATA_SOURCE = customer_data2,\n  FILE_FORMAT = skipHeader_CSV\n);\n\nselect * from customer\ndrop EXTERNAL TABLE customer\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dbdatabase",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tblfromspotify')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT trackCSV \nWITH (FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS(\n          FIELD_TERMINATOR = ',',\n          STRING_DELIMITER = '\"',\n          FIRST_ROW = 2,\n          USE_TYPE_DEFAULT = True)\n);\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'trackData' )\n  CREATE EXTERNAL DATA SOURCE trackData \n  WITH (\n    LOCATION = 'abfss://bronze@riyalgen2.dfs.core.windows.net' \n  );\n\n  CREATE EXTERNAL TABLE trackTbl(\n   track_name VARCHAR(255),\n    artist_name VARCHAR(255),\n    artist_count INT,\n    released_year INT,\n    released_month INT,\n    released_day INT,\n    in_spotify_playlists INT,\n    in_spotify_charts INT,\n    streams VARCHAR(255), --ERROR SHOULD BE INT\n    in_apple_playlists INT,\n    in_apple_charts INT,\n    in_deezer_playlists  VARCHAR(255), --ERROR SHOULD BE INT\n    in_deezer_charts VARCHAR(255), --ERROR SHOULD BE INT\n    in_shazam_charts VARCHAR(255), --ERROR SHOULD BE INT\n    bpm INT,\n    \"key\" VARCHAR(10),\n    mode VARCHAR(255),\n    danceability_percent FLOAT,\n    valence_percent FLOAT,\n    energy_percent FLOAT,\n    acousticness_percent FLOAT,\n    instrumentalness_percent FLOAT,\n    liveness_percent FLOAT,\n    speechiness_percent FLOAT,\n    cover_url VARCHAR(255)\n)\nWITH (\n  LOCATION = 'Spoti*.csv',\n  DATA_SOURCE = trackData,\n  FILE_FORMAT = trackCSV\n);\nSELECT * from trackTbl\n\ndrop EXTERNAL TABLE trackTbl",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dbdatabase",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}